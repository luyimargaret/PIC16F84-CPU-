vendor_name = ModelSim
source_file = 1, D:/Quartus_file/1_PIC/1_PC/pc.v
source_file = 1, D:/Quartus_file/1_PIC/1_PC/db/pc.cbx.xml
design_name = pc
instance = comp, \OUT_STACK[0]~output , OUT_STACK[0]~output, pc, 1
instance = comp, \OUT_STACK[1]~output , OUT_STACK[1]~output, pc, 1
instance = comp, \OUT_STACK[2]~output , OUT_STACK[2]~output, pc, 1
instance = comp, \OUT_STACK[3]~output , OUT_STACK[3]~output, pc, 1
instance = comp, \OUT_STACK[4]~output , OUT_STACK[4]~output, pc, 1
instance = comp, \OUT_STACK[5]~output , OUT_STACK[5]~output, pc, 1
instance = comp, \OUT_STACK[6]~output , OUT_STACK[6]~output, pc, 1
instance = comp, \OUT_STACK[7]~output , OUT_STACK[7]~output, pc, 1
instance = comp, \OUT_STACK[8]~output , OUT_STACK[8]~output, pc, 1
instance = comp, \OUT_STACK[9]~output , OUT_STACK[9]~output, pc, 1
instance = comp, \OUT_MEMORY[0]~output , OUT_MEMORY[0]~output, pc, 1
instance = comp, \OUT_MEMORY[1]~output , OUT_MEMORY[1]~output, pc, 1
instance = comp, \OUT_MEMORY[2]~output , OUT_MEMORY[2]~output, pc, 1
instance = comp, \OUT_MEMORY[3]~output , OUT_MEMORY[3]~output, pc, 1
instance = comp, \OUT_MEMORY[4]~output , OUT_MEMORY[4]~output, pc, 1
instance = comp, \OUT_MEMORY[5]~output , OUT_MEMORY[5]~output, pc, 1
instance = comp, \OUT_MEMORY[6]~output , OUT_MEMORY[6]~output, pc, 1
instance = comp, \OUT_MEMORY[7]~output , OUT_MEMORY[7]~output, pc, 1
instance = comp, \OUT_MEMORY[8]~output , OUT_MEMORY[8]~output, pc, 1
instance = comp, \OUT_MEMORY[9]~output , OUT_MEMORY[9]~output, pc, 1
instance = comp, \clock~input , clock~input, pc, 1
instance = comp, \clock~inputclkctrl , clock~inputclkctrl, pc, 1
instance = comp, \call_en~input , call_en~input, pc, 1
instance = comp, \IN_SFR[0]~input , IN_SFR[0]~input, pc, 1
instance = comp, \goto_en~input , goto_en~input, pc, 1
instance = comp, \short_jump_en~input , short_jump_en~input, pc, 1
instance = comp, \out_en~input , out_en~input, pc, 1
instance = comp, \IN_STACK[0]~input , IN_STACK[0]~input, pc, 1
instance = comp, \OUT_MEMORY~0 , OUT_MEMORY~0, pc, 1
instance = comp, \OUT_MEMORY~1 , OUT_MEMORY~1, pc, 1
instance = comp, \OUT_MEMORY~2 , OUT_MEMORY~2, pc, 1
instance = comp, \reset~input , reset~input, pc, 1
instance = comp, \reset~inputclkctrl , reset~inputclkctrl, pc, 1
instance = comp, \en~input , en~input, pc, 1
instance = comp, \OUT_MEMORY[0]~reg0 , OUT_MEMORY[0]~reg0, pc, 1
instance = comp, \Add0~0 , Add0~0, pc, 1
instance = comp, \OUT_STACK[0]~0 , OUT_STACK[0]~0, pc, 1
instance = comp, \OUT_STACK[0]~reg0 , OUT_STACK[0]~reg0, pc, 1
instance = comp, \IN_SFR[1]~input , IN_SFR[1]~input, pc, 1
instance = comp, \OUT_MEMORY[1]~3 , OUT_MEMORY[1]~3, pc, 1
instance = comp, \OUT_MEMORY[1]~4 , OUT_MEMORY[1]~4, pc, 1
instance = comp, \Add1~0 , Add1~0, pc, 1
instance = comp, \OUT_MEMORY~5 , OUT_MEMORY~5, pc, 1
instance = comp, \IN_STACK[1]~input , IN_STACK[1]~input, pc, 1
instance = comp, \OUT_MEMORY~6 , OUT_MEMORY~6, pc, 1
instance = comp, \OUT_MEMORY[1]~reg0 , OUT_MEMORY[1]~reg0, pc, 1
instance = comp, \Add0~2 , Add0~2, pc, 1
instance = comp, \OUT_STACK[1]~reg0 , OUT_STACK[1]~reg0, pc, 1
instance = comp, \IN_SFR[2]~input , IN_SFR[2]~input, pc, 1
instance = comp, \Add1~2 , Add1~2, pc, 1
instance = comp, \IN_STACK[2]~input , IN_STACK[2]~input, pc, 1
instance = comp, \OUT_MEMORY~7 , OUT_MEMORY~7, pc, 1
instance = comp, \OUT_MEMORY~8 , OUT_MEMORY~8, pc, 1
instance = comp, \OUT_MEMORY[2]~reg0 , OUT_MEMORY[2]~reg0, pc, 1
instance = comp, \Add0~4 , Add0~4, pc, 1
instance = comp, \OUT_STACK[2]~reg0 , OUT_STACK[2]~reg0, pc, 1
instance = comp, \IN_STACK[3]~input , IN_STACK[3]~input, pc, 1
instance = comp, \IN_SFR[3]~input , IN_SFR[3]~input, pc, 1
instance = comp, \Add1~4 , Add1~4, pc, 1
instance = comp, \OUT_MEMORY~9 , OUT_MEMORY~9, pc, 1
instance = comp, \OUT_MEMORY~10 , OUT_MEMORY~10, pc, 1
instance = comp, \OUT_MEMORY[3]~reg0 , OUT_MEMORY[3]~reg0, pc, 1
instance = comp, \Add0~6 , Add0~6, pc, 1
instance = comp, \OUT_STACK[3]~reg0 , OUT_STACK[3]~reg0, pc, 1
instance = comp, \IN_SFR[4]~input , IN_SFR[4]~input, pc, 1
instance = comp, \Add1~6 , Add1~6, pc, 1
instance = comp, \IN_STACK[4]~input , IN_STACK[4]~input, pc, 1
instance = comp, \OUT_MEMORY~11 , OUT_MEMORY~11, pc, 1
instance = comp, \OUT_MEMORY~12 , OUT_MEMORY~12, pc, 1
instance = comp, \OUT_MEMORY[4]~reg0 , OUT_MEMORY[4]~reg0, pc, 1
instance = comp, \Add0~8 , Add0~8, pc, 1
instance = comp, \OUT_STACK[4]~reg0 , OUT_STACK[4]~reg0, pc, 1
instance = comp, \IN_STACK[5]~input , IN_STACK[5]~input, pc, 1
instance = comp, \IN_SFR[5]~input , IN_SFR[5]~input, pc, 1
instance = comp, \Add1~8 , Add1~8, pc, 1
instance = comp, \OUT_MEMORY~13 , OUT_MEMORY~13, pc, 1
instance = comp, \OUT_MEMORY~14 , OUT_MEMORY~14, pc, 1
instance = comp, \OUT_MEMORY[5]~reg0 , OUT_MEMORY[5]~reg0, pc, 1
instance = comp, \Add0~10 , Add0~10, pc, 1
instance = comp, \OUT_STACK[5]~reg0 , OUT_STACK[5]~reg0, pc, 1
instance = comp, \IN_SFR[6]~input , IN_SFR[6]~input, pc, 1
instance = comp, \Add1~10 , Add1~10, pc, 1
instance = comp, \IN_STACK[6]~input , IN_STACK[6]~input, pc, 1
instance = comp, \OUT_MEMORY~15 , OUT_MEMORY~15, pc, 1
instance = comp, \OUT_MEMORY~16 , OUT_MEMORY~16, pc, 1
instance = comp, \OUT_MEMORY[6]~reg0 , OUT_MEMORY[6]~reg0, pc, 1
instance = comp, \Add0~12 , Add0~12, pc, 1
instance = comp, \OUT_STACK[6]~reg0 , OUT_STACK[6]~reg0, pc, 1
instance = comp, \IN_STACK[7]~input , IN_STACK[7]~input, pc, 1
instance = comp, \IN_SFR[7]~input , IN_SFR[7]~input, pc, 1
instance = comp, \Add1~12 , Add1~12, pc, 1
instance = comp, \OUT_MEMORY~17 , OUT_MEMORY~17, pc, 1
instance = comp, \OUT_MEMORY~18 , OUT_MEMORY~18, pc, 1
instance = comp, \OUT_MEMORY[7]~reg0 , OUT_MEMORY[7]~reg0, pc, 1
instance = comp, \Add0~14 , Add0~14, pc, 1
instance = comp, \OUT_STACK[7]~reg0 , OUT_STACK[7]~reg0, pc, 1
instance = comp, \IN_SFR[8]~input , IN_SFR[8]~input, pc, 1
instance = comp, \Add1~14 , Add1~14, pc, 1
instance = comp, \IN_STACK[8]~input , IN_STACK[8]~input, pc, 1
instance = comp, \OUT_MEMORY~19 , OUT_MEMORY~19, pc, 1
instance = comp, \OUT_MEMORY~20 , OUT_MEMORY~20, pc, 1
instance = comp, \OUT_MEMORY[8]~reg0 , OUT_MEMORY[8]~reg0, pc, 1
instance = comp, \Add0~16 , Add0~16, pc, 1
instance = comp, \OUT_STACK[8]~reg0 , OUT_STACK[8]~reg0, pc, 1
instance = comp, \Add1~16 , Add1~16, pc, 1
instance = comp, \IN_SFR[9]~input , IN_SFR[9]~input, pc, 1
instance = comp, \IN_STACK[9]~input , IN_STACK[9]~input, pc, 1
instance = comp, \OUT_MEMORY~21 , OUT_MEMORY~21, pc, 1
instance = comp, \OUT_MEMORY~22 , OUT_MEMORY~22, pc, 1
instance = comp, \OUT_MEMORY[9]~reg0 , OUT_MEMORY[9]~reg0, pc, 1
instance = comp, \Add0~18 , Add0~18, pc, 1
instance = comp, \OUT_STACK[9]~reg0 , OUT_STACK[9]~reg0, pc, 1
